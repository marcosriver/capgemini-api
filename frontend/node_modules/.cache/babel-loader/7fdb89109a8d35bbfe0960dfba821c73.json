{"ast":null,"code":"'use strict';\n\nvar _createForOfIteratorHelper = require(\"C:/Users/Marcos/Desktop/capgmenini-api/frontend/node_modules/@babel/runtime/helpers/createForOfIteratorHelper.js\").default;\n\nvar _classCallCheck = require(\"C:/Users/Marcos/Desktop/capgmenini-api/frontend/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\n\nvar _createClass = require(\"C:/Users/Marcos/Desktop/capgmenini-api/frontend/node_modules/@babel/runtime/helpers/createClass.js\").default;\n\nvar _require = require('source-map-js'),\n    SourceMapConsumer = _require.SourceMapConsumer,\n    SourceMapGenerator = _require.SourceMapGenerator;\n\nvar _require2 = require('path'),\n    dirname = _require2.dirname,\n    resolve = _require2.resolve,\n    relative = _require2.relative,\n    sep = _require2.sep;\n\nvar _require3 = require('url'),\n    pathToFileURL = _require3.pathToFileURL;\n\nvar Input = require('./input');\n\nvar sourceMapAvailable = Boolean(SourceMapConsumer && SourceMapGenerator);\nvar pathAvailable = Boolean(dirname && resolve && relative && sep);\n\nvar MapGenerator = /*#__PURE__*/function () {\n  function MapGenerator(stringify, root, opts, cssString) {\n    _classCallCheck(this, MapGenerator);\n\n    this.stringify = stringify;\n    this.mapOpts = opts.map || {};\n    this.root = root;\n    this.opts = opts;\n    this.css = cssString;\n  }\n\n  _createClass(MapGenerator, [{\n    key: \"isMap\",\n    value: function isMap() {\n      if (typeof this.opts.map !== 'undefined') {\n        return !!this.opts.map;\n      }\n\n      return this.previous().length > 0;\n    }\n  }, {\n    key: \"previous\",\n    value: function previous() {\n      var _this = this;\n\n      if (!this.previousMaps) {\n        this.previousMaps = [];\n\n        if (this.root) {\n          this.root.walk(function (node) {\n            if (node.source && node.source.input.map) {\n              var map = node.source.input.map;\n\n              if (!_this.previousMaps.includes(map)) {\n                _this.previousMaps.push(map);\n              }\n            }\n          });\n        } else {\n          var input = new Input(this.css, this.opts);\n          if (input.map) this.previousMaps.push(input.map);\n        }\n      }\n\n      return this.previousMaps;\n    }\n  }, {\n    key: \"isInline\",\n    value: function isInline() {\n      if (typeof this.mapOpts.inline !== 'undefined') {\n        return this.mapOpts.inline;\n      }\n\n      var annotation = this.mapOpts.annotation;\n\n      if (typeof annotation !== 'undefined' && annotation !== true) {\n        return false;\n      }\n\n      if (this.previous().length) {\n        return this.previous().some(function (i) {\n          return i.inline;\n        });\n      }\n\n      return true;\n    }\n  }, {\n    key: \"isSourcesContent\",\n    value: function isSourcesContent() {\n      if (typeof this.mapOpts.sourcesContent !== 'undefined') {\n        return this.mapOpts.sourcesContent;\n      }\n\n      if (this.previous().length) {\n        return this.previous().some(function (i) {\n          return i.withContent();\n        });\n      }\n\n      return true;\n    }\n  }, {\n    key: \"clearAnnotation\",\n    value: function clearAnnotation() {\n      if (this.mapOpts.annotation === false) return;\n\n      if (this.root) {\n        var node;\n\n        for (var i = this.root.nodes.length - 1; i >= 0; i--) {\n          node = this.root.nodes[i];\n          if (node.type !== 'comment') continue;\n\n          if (node.text.indexOf('# sourceMappingURL=') === 0) {\n            this.root.removeChild(i);\n          }\n        }\n      } else if (this.css) {\n        this.css = this.css.replace(/(\\n)?\\/\\*#[\\S\\s]*?\\*\\/$/gm, '');\n      }\n    }\n  }, {\n    key: \"setSourcesContent\",\n    value: function setSourcesContent() {\n      var _this2 = this;\n\n      var already = {};\n\n      if (this.root) {\n        this.root.walk(function (node) {\n          if (node.source) {\n            var from = node.source.input.from;\n\n            if (from && !already[from]) {\n              already[from] = true;\n\n              _this2.map.setSourceContent(_this2.toUrl(_this2.path(from)), node.source.input.css);\n            }\n          }\n        });\n      } else if (this.css) {\n        var from = this.opts.from ? this.toUrl(this.path(this.opts.from)) : '<no source>';\n        this.map.setSourceContent(from, this.css);\n      }\n    }\n  }, {\n    key: \"applyPrevMaps\",\n    value: function applyPrevMaps() {\n      var _iterator = _createForOfIteratorHelper(this.previous()),\n          _step;\n\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var prev = _step.value;\n          var from = this.toUrl(this.path(prev.file));\n          var root = prev.root || dirname(prev.file);\n          var map = void 0;\n\n          if (this.mapOpts.sourcesContent === false) {\n            map = new SourceMapConsumer(prev.text);\n\n            if (map.sourcesContent) {\n              map.sourcesContent = map.sourcesContent.map(function () {\n                return null;\n              });\n            }\n          } else {\n            map = prev.consumer();\n          }\n\n          this.map.applySourceMap(map, from, this.toUrl(this.path(root)));\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n    }\n  }, {\n    key: \"isAnnotation\",\n    value: function isAnnotation() {\n      if (this.isInline()) {\n        return true;\n      }\n\n      if (typeof this.mapOpts.annotation !== 'undefined') {\n        return this.mapOpts.annotation;\n      }\n\n      if (this.previous().length) {\n        return this.previous().some(function (i) {\n          return i.annotation;\n        });\n      }\n\n      return true;\n    }\n  }, {\n    key: \"toBase64\",\n    value: function toBase64(str) {\n      if (Buffer) {\n        return Buffer.from(str).toString('base64');\n      } else {\n        return window.btoa(unescape(encodeURIComponent(str)));\n      }\n    }\n  }, {\n    key: \"addAnnotation\",\n    value: function addAnnotation() {\n      var content;\n\n      if (this.isInline()) {\n        content = 'data:application/json;base64,' + this.toBase64(this.map.toString());\n      } else if (typeof this.mapOpts.annotation === 'string') {\n        content = this.mapOpts.annotation;\n      } else if (typeof this.mapOpts.annotation === 'function') {\n        content = this.mapOpts.annotation(this.opts.to, this.root);\n      } else {\n        content = this.outputFile() + '.map';\n      }\n\n      var eol = '\\n';\n      if (this.css.includes('\\r\\n')) eol = '\\r\\n';\n      this.css += eol + '/*# sourceMappingURL=' + content + ' */';\n    }\n  }, {\n    key: \"outputFile\",\n    value: function outputFile() {\n      if (this.opts.to) {\n        return this.path(this.opts.to);\n      } else if (this.opts.from) {\n        return this.path(this.opts.from);\n      } else {\n        return 'to.css';\n      }\n    }\n  }, {\n    key: \"generateMap\",\n    value: function generateMap() {\n      if (this.root) {\n        this.generateString();\n      } else if (this.previous().length === 1) {\n        var prev = this.previous()[0].consumer();\n        prev.file = this.outputFile();\n        this.map = SourceMapGenerator.fromSourceMap(prev);\n      } else {\n        this.map = new SourceMapGenerator({\n          file: this.outputFile()\n        });\n        this.map.addMapping({\n          source: this.opts.from ? this.toUrl(this.path(this.opts.from)) : '<no source>',\n          generated: {\n            line: 1,\n            column: 0\n          },\n          original: {\n            line: 1,\n            column: 0\n          }\n        });\n      }\n\n      if (this.isSourcesContent()) this.setSourcesContent();\n      if (this.root && this.previous().length > 0) this.applyPrevMaps();\n      if (this.isAnnotation()) this.addAnnotation();\n\n      if (this.isInline()) {\n        return [this.css];\n      } else {\n        return [this.css, this.map];\n      }\n    }\n  }, {\n    key: \"path\",\n    value: function path(file) {\n      if (file.indexOf('<') === 0) return file;\n      if (/^\\w+:\\/\\//.test(file)) return file;\n      if (this.mapOpts.absolute) return file;\n      var from = this.opts.to ? dirname(this.opts.to) : '.';\n\n      if (typeof this.mapOpts.annotation === 'string') {\n        from = dirname(resolve(from, this.mapOpts.annotation));\n      }\n\n      file = relative(from, file);\n      return file;\n    }\n  }, {\n    key: \"toUrl\",\n    value: function toUrl(path) {\n      if (sep === '\\\\') {\n        path = path.replace(/\\\\/g, '/');\n      }\n\n      return encodeURI(path).replace(/[#?]/g, encodeURIComponent);\n    }\n  }, {\n    key: \"sourcePath\",\n    value: function sourcePath(node) {\n      if (this.mapOpts.from) {\n        return this.toUrl(this.mapOpts.from);\n      } else if (this.mapOpts.absolute) {\n        if (pathToFileURL) {\n          return pathToFileURL(node.source.input.from).toString();\n        } else {\n          throw new Error('`map.absolute` option is not available in this PostCSS build');\n        }\n      } else {\n        return this.toUrl(this.path(node.source.input.from));\n      }\n    }\n  }, {\n    key: \"generateString\",\n    value: function generateString() {\n      var _this3 = this;\n\n      this.css = '';\n      this.map = new SourceMapGenerator({\n        file: this.outputFile()\n      });\n      var line = 1;\n      var column = 1;\n      var noSource = '<no source>';\n      var mapping = {\n        source: '',\n        generated: {\n          line: 0,\n          column: 0\n        },\n        original: {\n          line: 0,\n          column: 0\n        }\n      };\n      var lines, last;\n      this.stringify(this.root, function (str, node, type) {\n        _this3.css += str;\n\n        if (node && type !== 'end') {\n          mapping.generated.line = line;\n          mapping.generated.column = column - 1;\n\n          if (node.source && node.source.start) {\n            mapping.source = _this3.sourcePath(node);\n            mapping.original.line = node.source.start.line;\n            mapping.original.column = node.source.start.column - 1;\n\n            _this3.map.addMapping(mapping);\n          } else {\n            mapping.source = noSource;\n            mapping.original.line = 1;\n            mapping.original.column = 0;\n\n            _this3.map.addMapping(mapping);\n          }\n        }\n\n        lines = str.match(/\\n/g);\n\n        if (lines) {\n          line += lines.length;\n          last = str.lastIndexOf('\\n');\n          column = str.length - last;\n        } else {\n          column += str.length;\n        }\n\n        if (node && type !== 'start') {\n          var p = node.parent || {\n            raws: {}\n          };\n\n          if (node.type !== 'decl' || node !== p.last || p.raws.semicolon) {\n            if (node.source && node.source.end) {\n              mapping.source = _this3.sourcePath(node);\n              mapping.original.line = node.source.end.line;\n              mapping.original.column = node.source.end.column - 1;\n              mapping.generated.line = line;\n              mapping.generated.column = column - 2;\n\n              _this3.map.addMapping(mapping);\n            } else {\n              mapping.source = noSource;\n              mapping.original.line = 1;\n              mapping.original.column = 0;\n              mapping.generated.line = line;\n              mapping.generated.column = column - 1;\n\n              _this3.map.addMapping(mapping);\n            }\n          }\n        }\n      });\n    }\n  }, {\n    key: \"generate\",\n    value: function generate() {\n      this.clearAnnotation();\n\n      if (pathAvailable && sourceMapAvailable && this.isMap()) {\n        return this.generateMap();\n      } else {\n        var result = '';\n        this.stringify(this.root, function (i) {\n          result += i;\n        });\n        return [result];\n      }\n    }\n  }]);\n\n  return MapGenerator;\n}();\n\nmodule.exports = MapGenerator;","map":{"version":3,"names":["require","SourceMapConsumer","SourceMapGenerator","dirname","resolve","relative","sep","pathToFileURL","Input","sourceMapAvailable","Boolean","pathAvailable","MapGenerator","stringify","root","opts","cssString","mapOpts","map","css","previous","length","previousMaps","walk","node","source","input","includes","push","inline","annotation","some","i","sourcesContent","withContent","nodes","type","text","indexOf","removeChild","replace","already","from","setSourceContent","toUrl","path","prev","file","consumer","applySourceMap","isInline","str","Buffer","toString","window","btoa","unescape","encodeURIComponent","content","toBase64","to","outputFile","eol","generateString","fromSourceMap","addMapping","generated","line","column","original","isSourcesContent","setSourcesContent","applyPrevMaps","isAnnotation","addAnnotation","test","absolute","encodeURI","Error","noSource","mapping","lines","last","start","sourcePath","match","lastIndexOf","p","parent","raws","semicolon","end","clearAnnotation","isMap","generateMap","result","module","exports"],"sources":["C:/Users/Marcos/Desktop/capgmenini-api/frontend/node_modules/postcss/lib/map-generator.js"],"sourcesContent":["'use strict'\n\nlet { SourceMapConsumer, SourceMapGenerator } = require('source-map-js')\nlet { dirname, resolve, relative, sep } = require('path')\nlet { pathToFileURL } = require('url')\n\nlet Input = require('./input')\n\nlet sourceMapAvailable = Boolean(SourceMapConsumer && SourceMapGenerator)\nlet pathAvailable = Boolean(dirname && resolve && relative && sep)\n\nclass MapGenerator {\n  constructor(stringify, root, opts, cssString) {\n    this.stringify = stringify\n    this.mapOpts = opts.map || {}\n    this.root = root\n    this.opts = opts\n    this.css = cssString\n  }\n\n  isMap() {\n    if (typeof this.opts.map !== 'undefined') {\n      return !!this.opts.map\n    }\n    return this.previous().length > 0\n  }\n\n  previous() {\n    if (!this.previousMaps) {\n      this.previousMaps = []\n      if (this.root) {\n        this.root.walk(node => {\n          if (node.source && node.source.input.map) {\n            let map = node.source.input.map\n            if (!this.previousMaps.includes(map)) {\n              this.previousMaps.push(map)\n            }\n          }\n        })\n      } else {\n        let input = new Input(this.css, this.opts)\n        if (input.map) this.previousMaps.push(input.map)\n      }\n    }\n\n    return this.previousMaps\n  }\n\n  isInline() {\n    if (typeof this.mapOpts.inline !== 'undefined') {\n      return this.mapOpts.inline\n    }\n\n    let annotation = this.mapOpts.annotation\n    if (typeof annotation !== 'undefined' && annotation !== true) {\n      return false\n    }\n\n    if (this.previous().length) {\n      return this.previous().some(i => i.inline)\n    }\n    return true\n  }\n\n  isSourcesContent() {\n    if (typeof this.mapOpts.sourcesContent !== 'undefined') {\n      return this.mapOpts.sourcesContent\n    }\n    if (this.previous().length) {\n      return this.previous().some(i => i.withContent())\n    }\n    return true\n  }\n\n  clearAnnotation() {\n    if (this.mapOpts.annotation === false) return\n\n    if (this.root) {\n      let node\n      for (let i = this.root.nodes.length - 1; i >= 0; i--) {\n        node = this.root.nodes[i]\n        if (node.type !== 'comment') continue\n        if (node.text.indexOf('# sourceMappingURL=') === 0) {\n          this.root.removeChild(i)\n        }\n      }\n    } else if (this.css) {\n      this.css = this.css.replace(/(\\n)?\\/\\*#[\\S\\s]*?\\*\\/$/gm, '')\n    }\n  }\n\n  setSourcesContent() {\n    let already = {}\n    if (this.root) {\n      this.root.walk(node => {\n        if (node.source) {\n          let from = node.source.input.from\n          if (from && !already[from]) {\n            already[from] = true\n            this.map.setSourceContent(\n              this.toUrl(this.path(from)),\n              node.source.input.css\n            )\n          }\n        }\n      })\n    } else if (this.css) {\n      let from = this.opts.from\n        ? this.toUrl(this.path(this.opts.from))\n        : '<no source>'\n      this.map.setSourceContent(from, this.css)\n    }\n  }\n\n  applyPrevMaps() {\n    for (let prev of this.previous()) {\n      let from = this.toUrl(this.path(prev.file))\n      let root = prev.root || dirname(prev.file)\n      let map\n\n      if (this.mapOpts.sourcesContent === false) {\n        map = new SourceMapConsumer(prev.text)\n        if (map.sourcesContent) {\n          map.sourcesContent = map.sourcesContent.map(() => null)\n        }\n      } else {\n        map = prev.consumer()\n      }\n\n      this.map.applySourceMap(map, from, this.toUrl(this.path(root)))\n    }\n  }\n\n  isAnnotation() {\n    if (this.isInline()) {\n      return true\n    }\n    if (typeof this.mapOpts.annotation !== 'undefined') {\n      return this.mapOpts.annotation\n    }\n    if (this.previous().length) {\n      return this.previous().some(i => i.annotation)\n    }\n    return true\n  }\n\n  toBase64(str) {\n    if (Buffer) {\n      return Buffer.from(str).toString('base64')\n    } else {\n      return window.btoa(unescape(encodeURIComponent(str)))\n    }\n  }\n\n  addAnnotation() {\n    let content\n\n    if (this.isInline()) {\n      content =\n        'data:application/json;base64,' + this.toBase64(this.map.toString())\n    } else if (typeof this.mapOpts.annotation === 'string') {\n      content = this.mapOpts.annotation\n    } else if (typeof this.mapOpts.annotation === 'function') {\n      content = this.mapOpts.annotation(this.opts.to, this.root)\n    } else {\n      content = this.outputFile() + '.map'\n    }\n    let eol = '\\n'\n    if (this.css.includes('\\r\\n')) eol = '\\r\\n'\n\n    this.css += eol + '/*# sourceMappingURL=' + content + ' */'\n  }\n\n  outputFile() {\n    if (this.opts.to) {\n      return this.path(this.opts.to)\n    } else if (this.opts.from) {\n      return this.path(this.opts.from)\n    } else {\n      return 'to.css'\n    }\n  }\n\n  generateMap() {\n    if (this.root) {\n      this.generateString()\n    } else if (this.previous().length === 1) {\n      let prev = this.previous()[0].consumer()\n      prev.file = this.outputFile()\n      this.map = SourceMapGenerator.fromSourceMap(prev)\n    } else {\n      this.map = new SourceMapGenerator({ file: this.outputFile() })\n      this.map.addMapping({\n        source: this.opts.from\n          ? this.toUrl(this.path(this.opts.from))\n          : '<no source>',\n        generated: { line: 1, column: 0 },\n        original: { line: 1, column: 0 }\n      })\n    }\n\n    if (this.isSourcesContent()) this.setSourcesContent()\n    if (this.root && this.previous().length > 0) this.applyPrevMaps()\n    if (this.isAnnotation()) this.addAnnotation()\n\n    if (this.isInline()) {\n      return [this.css]\n    } else {\n      return [this.css, this.map]\n    }\n  }\n\n  path(file) {\n    if (file.indexOf('<') === 0) return file\n    if (/^\\w+:\\/\\//.test(file)) return file\n    if (this.mapOpts.absolute) return file\n\n    let from = this.opts.to ? dirname(this.opts.to) : '.'\n\n    if (typeof this.mapOpts.annotation === 'string') {\n      from = dirname(resolve(from, this.mapOpts.annotation))\n    }\n\n    file = relative(from, file)\n    return file\n  }\n\n  toUrl(path) {\n    if (sep === '\\\\') {\n      path = path.replace(/\\\\/g, '/')\n    }\n    return encodeURI(path).replace(/[#?]/g, encodeURIComponent)\n  }\n\n  sourcePath(node) {\n    if (this.mapOpts.from) {\n      return this.toUrl(this.mapOpts.from)\n    } else if (this.mapOpts.absolute) {\n      if (pathToFileURL) {\n        return pathToFileURL(node.source.input.from).toString()\n      } else {\n        throw new Error(\n          '`map.absolute` option is not available in this PostCSS build'\n        )\n      }\n    } else {\n      return this.toUrl(this.path(node.source.input.from))\n    }\n  }\n\n  generateString() {\n    this.css = ''\n    this.map = new SourceMapGenerator({ file: this.outputFile() })\n\n    let line = 1\n    let column = 1\n\n    let noSource = '<no source>'\n    let mapping = {\n      source: '',\n      generated: { line: 0, column: 0 },\n      original: { line: 0, column: 0 }\n    }\n\n    let lines, last\n    this.stringify(this.root, (str, node, type) => {\n      this.css += str\n\n      if (node && type !== 'end') {\n        mapping.generated.line = line\n        mapping.generated.column = column - 1\n        if (node.source && node.source.start) {\n          mapping.source = this.sourcePath(node)\n          mapping.original.line = node.source.start.line\n          mapping.original.column = node.source.start.column - 1\n          this.map.addMapping(mapping)\n        } else {\n          mapping.source = noSource\n          mapping.original.line = 1\n          mapping.original.column = 0\n          this.map.addMapping(mapping)\n        }\n      }\n\n      lines = str.match(/\\n/g)\n      if (lines) {\n        line += lines.length\n        last = str.lastIndexOf('\\n')\n        column = str.length - last\n      } else {\n        column += str.length\n      }\n\n      if (node && type !== 'start') {\n        let p = node.parent || { raws: {} }\n        if (node.type !== 'decl' || node !== p.last || p.raws.semicolon) {\n          if (node.source && node.source.end) {\n            mapping.source = this.sourcePath(node)\n            mapping.original.line = node.source.end.line\n            mapping.original.column = node.source.end.column - 1\n            mapping.generated.line = line\n            mapping.generated.column = column - 2\n            this.map.addMapping(mapping)\n          } else {\n            mapping.source = noSource\n            mapping.original.line = 1\n            mapping.original.column = 0\n            mapping.generated.line = line\n            mapping.generated.column = column - 1\n            this.map.addMapping(mapping)\n          }\n        }\n      }\n    })\n  }\n\n  generate() {\n    this.clearAnnotation()\n    if (pathAvailable && sourceMapAvailable && this.isMap()) {\n      return this.generateMap()\n    } else {\n      let result = ''\n      this.stringify(this.root, i => {\n        result += i\n      })\n      return [result]\n    }\n  }\n}\n\nmodule.exports = MapGenerator\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}