{"ast":null,"code":"var _classCallCheck = require(\"C:/Users/Marcos/Desktop/capgmenini-api/frontend/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\n\nvar _createClass = require(\"C:/Users/Marcos/Desktop/capgmenini-api/frontend/node_modules/@babel/runtime/helpers/createClass.js\").default;\n\nvar _inherits = require(\"C:/Users/Marcos/Desktop/capgmenini-api/frontend/node_modules/@babel/runtime/helpers/inherits.js\").default;\n\nvar _createSuper = require(\"C:/Users/Marcos/Desktop/capgmenini-api/frontend/node_modules/@babel/runtime/helpers/createSuper.js\").default;\n\nvar Declaration = require('../declaration');\n\nvar BlockLogical = /*#__PURE__*/function (_Declaration) {\n  \"use strict\";\n\n  _inherits(BlockLogical, _Declaration);\n\n  var _super = _createSuper(BlockLogical);\n\n  function BlockLogical() {\n    _classCallCheck(this, BlockLogical);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(BlockLogical, [{\n    key: \"prefixed\",\n    value:\n    /**\n     * Use old syntax for -moz- and -webkit-\n     */\n    function prefixed(prop, prefix) {\n      if (prop.includes('-start')) {\n        return prefix + prop.replace('-block-start', '-before');\n      }\n\n      return prefix + prop.replace('-block-end', '-after');\n    }\n    /**\n     * Return property name by spec\n     */\n\n  }, {\n    key: \"normalize\",\n    value: function normalize(prop) {\n      if (prop.includes('-before')) {\n        return prop.replace('-before', '-block-start');\n      }\n\n      return prop.replace('-after', '-block-end');\n    }\n  }]);\n\n  return BlockLogical;\n}(Declaration);\n\nBlockLogical.names = ['border-block-start', 'border-block-end', 'margin-block-start', 'margin-block-end', 'padding-block-start', 'padding-block-end', 'border-before', 'border-after', 'margin-before', 'margin-after', 'padding-before', 'padding-after'];\nmodule.exports = BlockLogical;","map":{"version":3,"names":["Declaration","require","BlockLogical","prop","prefix","includes","replace","names","module","exports"],"sources":["C:/Users/Marcos/Desktop/capgmenini-api/frontend/node_modules/autoprefixer/lib/hacks/block-logical.js"],"sourcesContent":["let Declaration = require('../declaration')\n\nclass BlockLogical extends Declaration {\n  /**\n   * Use old syntax for -moz- and -webkit-\n   */\n  prefixed(prop, prefix) {\n    if (prop.includes('-start')) {\n      return prefix + prop.replace('-block-start', '-before')\n    }\n    return prefix + prop.replace('-block-end', '-after')\n  }\n\n  /**\n   * Return property name by spec\n   */\n  normalize(prop) {\n    if (prop.includes('-before')) {\n      return prop.replace('-before', '-block-start')\n    }\n    return prop.replace('-after', '-block-end')\n  }\n}\n\nBlockLogical.names = [\n  'border-block-start',\n  'border-block-end',\n  'margin-block-start',\n  'margin-block-end',\n  'padding-block-start',\n  'padding-block-end',\n  'border-before',\n  'border-after',\n  'margin-before',\n  'margin-after',\n  'padding-before',\n  'padding-after'\n]\n\nmodule.exports = BlockLogical\n"],"mappings":";;;;;;;;AAAA,IAAIA,WAAW,GAAGC,OAAO,CAAC,gBAAD,CAAzB;;IAEMC,Y;;;;;;;;;;;;;;;;IACJ;AACF;AACA;IACE,kBAASC,IAAT,EAAeC,MAAf,EAAuB;MACrB,IAAID,IAAI,CAACE,QAAL,CAAc,QAAd,CAAJ,EAA6B;QAC3B,OAAOD,MAAM,GAAGD,IAAI,CAACG,OAAL,CAAa,cAAb,EAA6B,SAA7B,CAAhB;MACD;;MACD,OAAOF,MAAM,GAAGD,IAAI,CAACG,OAAL,CAAa,YAAb,EAA2B,QAA3B,CAAhB;IACD;IAED;AACF;AACA;;;;WACE,mBAAUH,IAAV,EAAgB;MACd,IAAIA,IAAI,CAACE,QAAL,CAAc,SAAd,CAAJ,EAA8B;QAC5B,OAAOF,IAAI,CAACG,OAAL,CAAa,SAAb,EAAwB,cAAxB,CAAP;MACD;;MACD,OAAOH,IAAI,CAACG,OAAL,CAAa,QAAb,EAAuB,YAAvB,CAAP;IACD;;;;EAnBwBN,W;;AAsB3BE,YAAY,CAACK,KAAb,GAAqB,CACnB,oBADmB,EAEnB,kBAFmB,EAGnB,oBAHmB,EAInB,kBAJmB,EAKnB,qBALmB,EAMnB,mBANmB,EAOnB,eAPmB,EAQnB,cARmB,EASnB,eATmB,EAUnB,cAVmB,EAWnB,gBAXmB,EAYnB,eAZmB,CAArB;AAeAC,MAAM,CAACC,OAAP,GAAiBP,YAAjB"},"metadata":{},"sourceType":"script"}