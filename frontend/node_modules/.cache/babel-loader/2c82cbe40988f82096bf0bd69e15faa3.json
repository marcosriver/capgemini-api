{"ast":null,"code":"var _classCallCheck = require(\"C:/Users/Marcos/Desktop/capgmenini-api/frontend/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\n\nvar _createClass = require(\"C:/Users/Marcos/Desktop/capgmenini-api/frontend/node_modules/@babel/runtime/helpers/createClass.js\").default;\n\nvar _get = require(\"C:/Users/Marcos/Desktop/capgmenini-api/frontend/node_modules/@babel/runtime/helpers/get.js\").default;\n\nvar _getPrototypeOf = require(\"C:/Users/Marcos/Desktop/capgmenini-api/frontend/node_modules/@babel/runtime/helpers/getPrototypeOf.js\").default;\n\nvar _inherits = require(\"C:/Users/Marcos/Desktop/capgmenini-api/frontend/node_modules/@babel/runtime/helpers/inherits.js\").default;\n\nvar _createSuper = require(\"C:/Users/Marcos/Desktop/capgmenini-api/frontend/node_modules/@babel/runtime/helpers/createSuper.js\").default;\n\nvar Declaration = require('../declaration');\n\nvar BreakProps = /*#__PURE__*/function (_Declaration) {\n  \"use strict\";\n\n  _inherits(BreakProps, _Declaration);\n\n  var _super = _createSuper(BreakProps);\n\n  function BreakProps() {\n    _classCallCheck(this, BreakProps);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(BreakProps, [{\n    key: \"prefixed\",\n    value:\n    /**\n     * Change name for -webkit- and -moz- prefix\n     */\n    function prefixed(prop, prefix) {\n      return \"\".concat(prefix, \"column-\").concat(prop);\n    }\n    /**\n     * Return property name by final spec\n     */\n\n  }, {\n    key: \"normalize\",\n    value: function normalize(prop) {\n      if (prop.includes('inside')) {\n        return 'break-inside';\n      }\n\n      if (prop.includes('before')) {\n        return 'break-before';\n      }\n\n      return 'break-after';\n    }\n    /**\n     * Change prefixed value for avoid-column and avoid-page\n     */\n\n  }, {\n    key: \"set\",\n    value: function set(decl, prefix) {\n      if (decl.prop === 'break-inside' && decl.value === 'avoid-column' || decl.value === 'avoid-page') {\n        decl.value = 'avoid';\n      }\n\n      return _get(_getPrototypeOf(BreakProps.prototype), \"set\", this).call(this, decl, prefix);\n    }\n    /**\n     * Don’t prefix some values\n     */\n\n  }, {\n    key: \"insert\",\n    value: function insert(decl, prefix, prefixes) {\n      if (decl.prop !== 'break-inside') {\n        return _get(_getPrototypeOf(BreakProps.prototype), \"insert\", this).call(this, decl, prefix, prefixes);\n      }\n\n      if (/region/i.test(decl.value) || /page/i.test(decl.value)) {\n        return undefined;\n      }\n\n      return _get(_getPrototypeOf(BreakProps.prototype), \"insert\", this).call(this, decl, prefix, prefixes);\n    }\n  }]);\n\n  return BreakProps;\n}(Declaration);\n\nBreakProps.names = ['break-inside', 'page-break-inside', 'column-break-inside', 'break-before', 'page-break-before', 'column-break-before', 'break-after', 'page-break-after', 'column-break-after'];\nmodule.exports = BreakProps;","map":{"version":3,"names":["Declaration","require","BreakProps","prop","prefix","includes","decl","value","prefixes","test","undefined","names","module","exports"],"sources":["C:/Users/Marcos/Desktop/capgmenini-api/frontend/node_modules/autoprefixer/lib/hacks/break-props.js"],"sourcesContent":["let Declaration = require('../declaration')\n\nclass BreakProps extends Declaration {\n  /**\n   * Change name for -webkit- and -moz- prefix\n   */\n  prefixed(prop, prefix) {\n    return `${prefix}column-${prop}`\n  }\n\n  /**\n   * Return property name by final spec\n   */\n  normalize(prop) {\n    if (prop.includes('inside')) {\n      return 'break-inside'\n    }\n    if (prop.includes('before')) {\n      return 'break-before'\n    }\n    return 'break-after'\n  }\n\n  /**\n   * Change prefixed value for avoid-column and avoid-page\n   */\n  set(decl, prefix) {\n    if (\n      (decl.prop === 'break-inside' && decl.value === 'avoid-column') ||\n      decl.value === 'avoid-page'\n    ) {\n      decl.value = 'avoid'\n    }\n    return super.set(decl, prefix)\n  }\n\n  /**\n   * Don’t prefix some values\n   */\n  insert(decl, prefix, prefixes) {\n    if (decl.prop !== 'break-inside') {\n      return super.insert(decl, prefix, prefixes)\n    }\n    if (/region/i.test(decl.value) || /page/i.test(decl.value)) {\n      return undefined\n    }\n    return super.insert(decl, prefix, prefixes)\n  }\n}\n\nBreakProps.names = [\n  'break-inside',\n  'page-break-inside',\n  'column-break-inside',\n  'break-before',\n  'page-break-before',\n  'column-break-before',\n  'break-after',\n  'page-break-after',\n  'column-break-after'\n]\n\nmodule.exports = BreakProps\n"],"mappings":";;;;;;;;;;;;AAAA,IAAIA,WAAW,GAAGC,OAAO,CAAC,gBAAD,CAAzB;;IAEMC,U;;;;;;;;;;;;;;;;IACJ;AACF;AACA;IACE,kBAASC,IAAT,EAAeC,MAAf,EAAuB;MACrB,iBAAUA,MAAV,oBAA0BD,IAA1B;IACD;IAED;AACF;AACA;;;;WACE,mBAAUA,IAAV,EAAgB;MACd,IAAIA,IAAI,CAACE,QAAL,CAAc,QAAd,CAAJ,EAA6B;QAC3B,OAAO,cAAP;MACD;;MACD,IAAIF,IAAI,CAACE,QAAL,CAAc,QAAd,CAAJ,EAA6B;QAC3B,OAAO,cAAP;MACD;;MACD,OAAO,aAAP;IACD;IAED;AACF;AACA;;;;WACE,aAAIC,IAAJ,EAAUF,MAAV,EAAkB;MAChB,IACGE,IAAI,CAACH,IAAL,KAAc,cAAd,IAAgCG,IAAI,CAACC,KAAL,KAAe,cAAhD,IACAD,IAAI,CAACC,KAAL,KAAe,YAFjB,EAGE;QACAD,IAAI,CAACC,KAAL,GAAa,OAAb;MACD;;MACD,2EAAiBD,IAAjB,EAAuBF,MAAvB;IACD;IAED;AACF;AACA;;;;WACE,gBAAOE,IAAP,EAAaF,MAAb,EAAqBI,QAArB,EAA+B;MAC7B,IAAIF,IAAI,CAACH,IAAL,KAAc,cAAlB,EAAkC;QAChC,8EAAoBG,IAApB,EAA0BF,MAA1B,EAAkCI,QAAlC;MACD;;MACD,IAAI,UAAUC,IAAV,CAAeH,IAAI,CAACC,KAApB,KAA8B,QAAQE,IAAR,CAAaH,IAAI,CAACC,KAAlB,CAAlC,EAA4D;QAC1D,OAAOG,SAAP;MACD;;MACD,8EAAoBJ,IAApB,EAA0BF,MAA1B,EAAkCI,QAAlC;IACD;;;;EA7CsBR,W;;AAgDzBE,UAAU,CAACS,KAAX,GAAmB,CACjB,cADiB,EAEjB,mBAFiB,EAGjB,qBAHiB,EAIjB,cAJiB,EAKjB,mBALiB,EAMjB,qBANiB,EAOjB,aAPiB,EAQjB,kBARiB,EASjB,oBATiB,CAAnB;AAYAC,MAAM,CAACC,OAAP,GAAiBX,UAAjB"},"metadata":{},"sourceType":"script"}