{"ast":null,"code":"var _createForOfIteratorHelper = require(\"C:/Users/Marcos/Desktop/capgmenini-api/frontend/node_modules/@babel/runtime/helpers/createForOfIteratorHelper.js\").default;\n\nvar browserslist = require('browserslist');\n\nfunction capitalize(str) {\n  return str.slice(0, 1).toUpperCase() + str.slice(1);\n}\n\nvar NAMES = {\n  ie: 'IE',\n  ie_mob: 'IE Mobile',\n  ios_saf: 'iOS Safari',\n  op_mini: 'Opera Mini',\n  op_mob: 'Opera Mobile',\n  and_chr: 'Chrome for Android',\n  and_ff: 'Firefox for Android',\n  and_uc: 'UC for Android',\n  and_qq: 'QQ Browser',\n  kaios: 'KaiOS Browser',\n  baidu: 'Baidu Browser',\n  samsung: 'Samsung Internet'\n};\n\nfunction prefix(name, prefixes, note) {\n  var out = \"  \".concat(name);\n  if (note) out += ' *';\n  out += ': ';\n  out += prefixes.map(function (i) {\n    return i.replace(/^-(.*)-$/g, '$1');\n  }).join(', ');\n  out += '\\n';\n  return out;\n}\n\nmodule.exports = function (prefixes) {\n  if (prefixes.browsers.selected.length === 0) {\n    return 'No browsers selected';\n  }\n\n  var versions = {};\n\n  var _iterator = _createForOfIteratorHelper(prefixes.browsers.selected),\n      _step;\n\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var _browser = _step.value;\n\n      var parts = _browser.split(' ');\n\n      var _name2 = parts[0];\n      var version = parts[1];\n      _name2 = NAMES[_name2] || capitalize(_name2);\n\n      if (versions[_name2]) {\n        versions[_name2].push(version);\n      } else {\n        versions[_name2] = [version];\n      }\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n\n  var out = 'Browsers:\\n';\n\n  for (var browser in versions) {\n    var list = versions[browser];\n    list = list.sort(function (a, b) {\n      return parseFloat(b) - parseFloat(a);\n    });\n    out += \"  \".concat(browser, \": \").concat(list.join(', '), \"\\n\");\n  }\n\n  var coverage = browserslist.coverage(prefixes.browsers.selected);\n  var round = Math.round(coverage * 100) / 100.0;\n  out += \"\\nThese browsers account for \".concat(round, \"% of all users globally\\n\");\n  var atrules = [];\n\n  for (var name in prefixes.add) {\n    var data = prefixes.add[name];\n\n    if (name[0] === '@' && data.prefixes) {\n      atrules.push(prefix(name, data.prefixes));\n    }\n  }\n\n  if (atrules.length > 0) {\n    out += \"\\nAt-Rules:\\n\".concat(atrules.sort().join(''));\n  }\n\n  var selectors = [];\n\n  var _iterator2 = _createForOfIteratorHelper(prefixes.add.selectors),\n      _step2;\n\n  try {\n    for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n      var selector = _step2.value;\n\n      if (selector.prefixes) {\n        selectors.push(prefix(selector.name, selector.prefixes));\n      }\n    }\n  } catch (err) {\n    _iterator2.e(err);\n  } finally {\n    _iterator2.f();\n  }\n\n  if (selectors.length > 0) {\n    out += \"\\nSelectors:\\n\".concat(selectors.sort().join(''));\n  }\n\n  var values = [];\n  var props = [];\n  var hadGrid = false;\n\n  for (var _name in prefixes.add) {\n    var _data = prefixes.add[_name];\n\n    if (_name[0] !== '@' && _data.prefixes) {\n      var grid = _name.indexOf('grid-') === 0;\n      if (grid) hadGrid = true;\n      props.push(prefix(_name, _data.prefixes, grid));\n    }\n\n    if (!Array.isArray(_data.values)) {\n      continue;\n    }\n\n    var _iterator3 = _createForOfIteratorHelper(_data.values),\n        _step3;\n\n    try {\n      for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n        var value = _step3.value;\n\n        var _grid = value.name.includes('grid');\n\n        if (_grid) hadGrid = true;\n        var string = prefix(value.name, value.prefixes, _grid);\n\n        if (!values.includes(string)) {\n          values.push(string);\n        }\n      }\n    } catch (err) {\n      _iterator3.e(err);\n    } finally {\n      _iterator3.f();\n    }\n  }\n\n  if (props.length > 0) {\n    out += \"\\nProperties:\\n\".concat(props.sort().join(''));\n  }\n\n  if (values.length > 0) {\n    out += \"\\nValues:\\n\".concat(values.sort().join(''));\n  }\n\n  if (hadGrid) {\n    out += '\\n* - Prefixes will be added only on grid: true option.\\n';\n  }\n\n  if (!atrules.length && !selectors.length && !props.length && !values.length) {\n    out += \"\\nAwesome! Your browsers don't require any vendor prefixes.\" + '\\nNow you can remove Autoprefixer from build steps.';\n  }\n\n  return out;\n};","map":{"version":3,"names":["browserslist","require","capitalize","str","slice","toUpperCase","NAMES","ie","ie_mob","ios_saf","op_mini","op_mob","and_chr","and_ff","and_uc","and_qq","kaios","baidu","samsung","prefix","name","prefixes","note","out","map","i","replace","join","module","exports","browsers","selected","length","versions","browser","parts","split","version","push","list","sort","a","b","parseFloat","coverage","round","Math","atrules","add","data","selectors","selector","values","props","hadGrid","grid","indexOf","Array","isArray","value","includes","string"],"sources":["C:/Users/Marcos/Desktop/capgmenini-api/frontend/node_modules/autoprefixer/lib/info.js"],"sourcesContent":["let browserslist = require('browserslist')\n\nfunction capitalize(str) {\n  return str.slice(0, 1).toUpperCase() + str.slice(1)\n}\n\nconst NAMES = {\n  ie: 'IE',\n  ie_mob: 'IE Mobile',\n  ios_saf: 'iOS Safari',\n  op_mini: 'Opera Mini',\n  op_mob: 'Opera Mobile',\n  and_chr: 'Chrome for Android',\n  and_ff: 'Firefox for Android',\n  and_uc: 'UC for Android',\n  and_qq: 'QQ Browser',\n  kaios: 'KaiOS Browser',\n  baidu: 'Baidu Browser',\n  samsung: 'Samsung Internet'\n}\n\nfunction prefix(name, prefixes, note) {\n  let out = `  ${name}`\n  if (note) out += ' *'\n  out += ': '\n  out += prefixes.map(i => i.replace(/^-(.*)-$/g, '$1')).join(', ')\n  out += '\\n'\n  return out\n}\n\nmodule.exports = function (prefixes) {\n  if (prefixes.browsers.selected.length === 0) {\n    return 'No browsers selected'\n  }\n\n  let versions = {}\n  for (let browser of prefixes.browsers.selected) {\n    let parts = browser.split(' ')\n    let name = parts[0]\n    let version = parts[1]\n\n    name = NAMES[name] || capitalize(name)\n    if (versions[name]) {\n      versions[name].push(version)\n    } else {\n      versions[name] = [version]\n    }\n  }\n\n  let out = 'Browsers:\\n'\n  for (let browser in versions) {\n    let list = versions[browser]\n    list = list.sort((a, b) => parseFloat(b) - parseFloat(a))\n    out += `  ${browser}: ${list.join(', ')}\\n`\n  }\n\n  let coverage = browserslist.coverage(prefixes.browsers.selected)\n  let round = Math.round(coverage * 100) / 100.0\n  out += `\\nThese browsers account for ${round}% of all users globally\\n`\n\n  let atrules = []\n  for (let name in prefixes.add) {\n    let data = prefixes.add[name]\n    if (name[0] === '@' && data.prefixes) {\n      atrules.push(prefix(name, data.prefixes))\n    }\n  }\n  if (atrules.length > 0) {\n    out += `\\nAt-Rules:\\n${atrules.sort().join('')}`\n  }\n\n  let selectors = []\n  for (let selector of prefixes.add.selectors) {\n    if (selector.prefixes) {\n      selectors.push(prefix(selector.name, selector.prefixes))\n    }\n  }\n  if (selectors.length > 0) {\n    out += `\\nSelectors:\\n${selectors.sort().join('')}`\n  }\n\n  let values = []\n  let props = []\n  let hadGrid = false\n  for (let name in prefixes.add) {\n    let data = prefixes.add[name]\n    if (name[0] !== '@' && data.prefixes) {\n      let grid = name.indexOf('grid-') === 0\n      if (grid) hadGrid = true\n      props.push(prefix(name, data.prefixes, grid))\n    }\n\n    if (!Array.isArray(data.values)) {\n      continue\n    }\n    for (let value of data.values) {\n      let grid = value.name.includes('grid')\n      if (grid) hadGrid = true\n      let string = prefix(value.name, value.prefixes, grid)\n      if (!values.includes(string)) {\n        values.push(string)\n      }\n    }\n  }\n\n  if (props.length > 0) {\n    out += `\\nProperties:\\n${props.sort().join('')}`\n  }\n  if (values.length > 0) {\n    out += `\\nValues:\\n${values.sort().join('')}`\n  }\n  if (hadGrid) {\n    out += '\\n* - Prefixes will be added only on grid: true option.\\n'\n  }\n\n  if (!atrules.length && !selectors.length && !props.length && !values.length) {\n    out +=\n      \"\\nAwesome! Your browsers don't require any vendor prefixes.\" +\n      '\\nNow you can remove Autoprefixer from build steps.'\n  }\n\n  return out\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}